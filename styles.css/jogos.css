*{
    padding: 0;
    margin: 0;
    vertical-align: baseline;
    list-style: none;
    border: 0;
}


/* |=============| */
/* |  cabeçalho  | */
/* |=============| */

.cabecalho{
    background: #fff;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 100;
}

.container{
    display: flex;
    justify-content: space-between;
    padding: 10px 20px 0 0;
}

.container div{
    padding: 0;
    margin: 0;
}

.container div a{
    display: inline-block;  /* Mostra os links de forma horizontal */
    color: #111;
    padding: 15px 20px;
    text-decoration: none;
    font-family: monospace;
    text-transform: uppercase;
    font-size: 1.1rem;
    letter-spacing: 1px;
}

.jogo:hover{
    border: #000;
    border-style: solid;
    border-radius: 10px;
}

.dispositivos:hover{
    border: #000;
    border-style:  solid;
    border-radius: 10px;
}

.suporte:hover{
    border: #000;
    border-style: solid;
    border-radius: 10px;
}

.colecao:hover{
    border: #000;
    border-style: solid;
    border-radius: 10px;
}

.minha-conta:hover{
    border: #000;
    border-style: solid;
    border-radius: 10px;
}


/* |============================================================================================| */
/* |  Estilizando o navegar para quando o mouse ficar encima dele, descer uma lista com opções  | */
/* |============================================================================================| */
.navegar{
    position: relative;
    cursor: pointer;
}

ul{
    display: inline; /* O display inline não tem efeito de altura e largura */
    margin: 0;
    padding: 0;
}

ul li{
    display: inline-block; /* O inline-block permite definir um valor de altura e largura e não add as quebras de linhas que o display block faz */
}


.navegar:hover ul{
    display: block;
}

.navegar ul{
    position: absolute; /* Os elementos posicionados absolutos são removidos do fluxo normal e podem sobrepor elementos. */
    width: 200px;
    display: none; /* Não deixa o conteúdo ser mostrado na tela */ 
    border-radius: 4px;
}

.navegar ul li{
    background: #fff;
    display: block;
}

.navegar ul li a{
    display: block !important;
}

.playstation a:hover{
    color: #0000CD;
} 

.xbox a:hover{
    color: #0f0;
}

.nintendo a:hover{
    color: #f00;
}

.navegar:hover .seta-para-baixo div{
    transform: rotate(90deg);
    top: 20%;
}


/* |==================================================================| */
/* |  Ainda no navegar fazer uma setinha como se ela abrisse a lista  | */
/* |==================================================================| */
.seta-para-baixo{
    width: 0px;
    height: 0px;
    position: absolute;
    right: 15px;
    top: 40%;
    background:white;
}
.seta-para-baixo > div{
    border-top: 5px solid transparent;
    border-right: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 5px solid black;
    transition: .2s linear;
}



/* |==============================| */
/* |  Estilizando a logo do site  | */
/* |==============================| */
.logo{
    width: 140px;
    height: 50px;
}

.logo a img{
    position: relative;
    top: -40px;
    width: 100px;
    height: 100px;
    object-fit:scale-down ;
}


/* |================================| */
/* |  Começando a galeria de jogos  | */
/* |================================| */

.gallery-games-container{
    display: flex;
    margin-top: 75px;
    flex-wrap: wrap; /* define se os itens flexíveis são forçados a processar na mesma linha ou se podem ser quebrados em várias linhas */
    justify-content: space-evenly;
    gap: 2vw;
    padding: 0 1vw;
}


.gallery-games{
    width: 340px;
    height: 320px;
    box-shadow: 5px 5px 5px #0008;
    flex-grow: 1; /* Esta propriedade especifica quanto espaço restante no contêiner flexível deve ser atribuído ao item (o fator de crescimento flexível). */
    transition:transform .2s linear;
}


.gallery-games:hover{
    transform: scale(0.9);
}


.gallery-games img{
    width: 100%;
    height: 100%;
    border-radius: 5px;
    object-fit: cover; /* A propriedade CSS object-fité usada para especificar como um <img> ou <video> deve ser redimensionado para caber em seu contêiner.   */

}

